#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Keyboards used by GoldenBot
"""

from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from .db import DBMan
from .functions import move_decimals


sacos = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton("Azucar", callback_data="azucar"),
            InlineKeyboardButton("Parrillero", callback_data="parrillero"),
            InlineKeyboardButton("Polvo", callback_data="polvo"),
        ],
        [
            InlineKeyboardButton("Otro", callback_data="otro"),
            InlineKeyboardButton("Grueso", callback_data="grueso"),
            InlineKeyboardButton("Regular", callback_data="regular"),
        ],
        [
            InlineKeyboardButton("🎒Nicovita", callback_data="nicovita"),
            InlineKeyboardButton("🎒Blanco", callback_data="blanco"),
            InlineKeyboardButton("🎒Marcado", callback_data="marcado"),
        ],
        [
            InlineKeyboardButton("⭕️Abierto", callback_data="abierto"),
            InlineKeyboardButton("🔴Cerrado", callback_data="cerrado"),
        ],
        [
            InlineKeyboardButton("❌Cancelar", callback_data="Cancelar"),
            InlineKeyboardButton("❎Quitar Ultimo", callback_data="Quitar_saco"),
        ],
        [
            InlineKeyboardButton("✅Finalizar", callback_data="Finalizar"),
            InlineKeyboardButton("➡Continuar", callback_data="Continuar"),
        ],
    ]
)

pago_especial = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton("Adelanto", callback_data="Adelanto"),
            InlineKeyboardButton("Prestamo", callback_data="Prestamo"),
            InlineKeyboardButton("Normal", callback_data="Pago Normal"),
        ],
    ]
)


def funsacos(db):
    return sacos


def funpago_especial(db):
    return pago_especial


def trabajadores(db):

    trabajadores = db.get_trabajadores()
    rows = []
    row = []

    for i, trabajador in enumerate(trabajadores, 1):
        button = str(trabajador[0]) + " " + trabajador[1]
        row.append(InlineKeyboardButton(button, callback_data=trabajador[1]))
        if i % 3 == 0:
            rows.append(row)
            row = []
    rows.append(row)
    rows.append(
        [
            InlineKeyboardButton("❌Cancelar", callback_data="Cancelar"),
            InlineKeyboardButton("❎Quitar Ultimo", callback_data="Quitar_trabajador"),
        ]
    )
    rows.append(
        [
            InlineKeyboardButton("🔼Nuevo", callback_data="Nuevo"),
            InlineKeyboardButton("➡Continuar", callback_data="Continuar"),
        ]
    )

    return InlineKeyboardMarkup(rows)


def pago(db):

    trabajadores = db.get_trabajadores()
    rows = []
    row = []

    for i, trabajador in enumerate(trabajadores, 1):
        row.append(
            InlineKeyboardButton(
                " ${:,.2f}".format(db.get_pagos(trabajador[1])) + " " + trabajador[1],
                callback_data=trabajador[1],
            )
        )
        if i % 2 == 0:
            rows.append(row)
            row = []
    rows.append(row)

    return InlineKeyboardMarkup(rows)


def gen_keyboard(keyboard):
    """Keyboards generator for TelMan"""

    if keyboard == "sacos":
        return funsacos
    elif keyboard in ["Estiba", "Producción"]:
        return trabajadores
    elif keyboard == "Pago":
        return pago
    elif keyboard == "pago_especial":
        return funpago_especial
    else:
        return None
