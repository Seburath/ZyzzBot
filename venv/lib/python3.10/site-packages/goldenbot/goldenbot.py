#!/usr/bin/env python
# -*- coding: utf-8 -*-

from .msgman import MsgMan


class GoldenBot(MsgMan):
    """Goldenbot commands management."""

    def estiba(self, update, context):
        print(111)
        text = update.message.text
        print(111)
        print(text)
        self.update = update
        if not self.in_goldenchat():
            return

        self.__init__()
        self.cmd = "Estiba"
        self.reply()

    def produccion(self, update, context):
        self.update = update
        if not self.in_goldenchat():
            return

        self.__init__()
        self.cmd = "Producción"
        self.reply()

    def inventario(self, update, context):
        self.update = update
        if not self.in_goldenchat():
            return

        self.__init__()
        self.cmd = "Inventario"
        self.reply(self.get_inventario())

    def pago(self, update, context):
        self.update = update

        if not self.in_goldenchat():
            return

        self.__init__()

        self.cmd = "Pago"
        self.status = "showing pagos"
        self.reply("Acumulados a pagar:\n")

    def anular(self, update, context):
        self.update = update
        if not self.is_admin_in_goldenchat():
            return

        self.__init__()
        self.cmd = "Anular"
        self.status = "anulando"

        cmd = update.message.text.split(" ")

        if len(cmd) > 2:
            try:
                cmd_id = int(cmd[2])
                table = cmd[1]

                if table == "trabajador":
                    self.db.rm_trabajador(cmd_id)

                    msg = "Eliminando trabajador id: " + str(cmd_id)
                    self.reply(msg=msg)

                elif table in [
                    "estiba",
                    "produccion",
                    "producción",
                ]:
                    self.db.rm_var_bodega(cmd_id)

                    msg = "Anulando " + table + " id: " + str(cmd_id)
                    self.reply(msg=msg)

                elif table == "pago":
                    self.db.rm_pago(cmd_id)

                    msg = "Anulando pago id: " + str(cmd_id)
                    self.reply(msg=msg)

            except:
                return

    def fd(self, update, context):
        self.update = update
        # if not self.is_admin_in_goldenchat():
        #   return

        self.cmd = "fd"
        self.status = "makefd"
        cmd_id = update.message.text.split(" ")[1]

        if self.db.bodega_var_is_fd(cmd_id):
            msg = f"Pagos de Bodega Var Id: {cmd_id} ya son de fin de semana."
        else:
            self.db.make_fd(cmd_id)
            msg = "Pagos de Id: {cmd_id} son ahora de fin de semana."

        self.reply(msg=msg)

    def nofd(self, update, context):
        self.update = update
        # if not self.is_admin_in_goldenchat():
        #    return

        self.cmd = "fd"
        self.status = "makefd"

        cmd_id = update.message.text.split(" ")[1]

        if self.db.bodega_var_is_fd(cmd_id):
            self.db.unmake_fd(cmd_id)
            msg = "Pagos de Id: {cmd_id} son ahora de dia normal."
        else:
            msg = "Pagos de Bodega Var Id: {cmd_id} ya son de dia normal."

        self.reply(msg=msg)
